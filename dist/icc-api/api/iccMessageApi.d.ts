/**
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { XHR } from "./XHR"
import * as models from "../model/models"
export declare class iccMessageApi {
  host: string
  headers: Array<XHR.Header>
  fetchImpl?: (input: RequestInfo, init?: RequestInit) => Promise<Response>
  constructor(
    host: string,
    headers: any,
    fetchImpl?: (input: RequestInfo, init?: RequestInit) => Promise<Response>
  )
  setHeaders(h: Array<XHR.Header>): void
  handleError(e: XHR.Data): void
  createMessage(body?: models.MessageDto): Promise<models.MessageDto | any>
  deleteDelegation(messageId: string, delegateId: string): Promise<models.MessageDto | any>
  deleteMessages(messageIds: string): Promise<any | Boolean>
  deleteMessagesBatch(body?: models.ListOfIdsDto): Promise<any | Boolean>
  findByHCPartyPatientSecretFKeys(secretFKeys?: string): Promise<Array<models.MessageDto> | any>
  findMessages(
    startKey?: string,
    startDocumentId?: string,
    limit?: number
  ): Promise<models.MessagePaginatedList | any>
  findMessagesByFromAddress(
    fromAddress?: string,
    startKey?: string,
    startDocumentId?: string,
    limit?: number,
    hcpId?: string
  ): Promise<models.MessagePaginatedList | any>
  findMessagesByToAddress(
    toAddress?: string,
    startKey?: string,
    startDocumentId?: string,
    limit?: number,
    reverse?: boolean,
    hcpId?: string
  ): Promise<models.MessagePaginatedList | any>
  findMessagesByTransportGuid(
    transportGuid?: string,
    received?: boolean,
    startKey?: string,
    startDocumentId?: string,
    limit?: number,
    hcpId?: string
  ): Promise<models.MessagePaginatedList | any>
  findMessagesByTransportGuidSentDate(
    transportGuid?: string,
    from?: number,
    to?: number,
    startKey?: string,
    startDocumentId?: string,
    limit?: number,
    hcpId?: string
  ): Promise<models.MessagePaginatedList | any>
  getChildren(messageId: string): Promise<Array<models.MessageDto> | any>
  getChildrenOfList(body?: models.ListOfIdsDto): Promise<Array<Array<models.MessageDto>> | any>
  getMessage(messageId: string): Promise<models.MessageDto | any>
  listMessagesByInvoiceIds(body?: models.ListOfIdsDto): Promise<Array<models.MessageDto> | any>
  modifyMessage(body?: models.MessageDto): Promise<models.MessageDto | any>
  newDelegations(
    messageId: string,
    body?: Array<models.DelegationDto>
  ): Promise<models.MessageDto | any>
  setMessagesReadStatus(
    body?: models.MessagesReadStatusUpdate
  ): Promise<Array<models.MessageDto> | any>
  setMessagesStatusBits(
    status: number,
    body?: models.ListOfIdsDto
  ): Promise<Array<models.MessageDto> | any>
}
