/**
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { XHR } from "./XHR"
import * as models from "../model/models"
export declare class iccBeKmehrApi {
  host: string
  headers: Array<XHR.Header>
  fetchImpl?: (input: RequestInfo, init?: RequestInit) => Promise<Response>
  constructor(
    host: string,
    headers: any,
    fetchImpl?: (input: RequestInfo, init?: RequestInit) => Promise<Response>
  )
  setHeaders(h: Array<XHR.Header>): void
  handleError(e: XHR.Data): void
  checkIfSMFPatientsExists(
    documentId: string,
    documentKey?: string,
    patientId?: string,
    language?: string,
    body?: any
  ): Promise<Array<models.CheckSMFPatientResult> | any>
  generateContactreportExport(
    patientId: string,
    id: string,
    date?: number,
    language?: string,
    recipientNihii?: string,
    recipientFirstName?: string,
    recipientLastName?: string,
    mimeType?: string,
    body?: Array<string>
  ): Promise<ArrayBuffer | any>
  generateDiaryNote(
    patientId: string,
    language?: string,
    body?: models.DiaryNoteExportInfoDto
  ): Promise<ArrayBuffer | any>
  generateLabresultExport(
    patientId: string,
    id: string,
    date?: number,
    language?: string,
    recipientNihii?: string,
    recipientFirstName?: string,
    recipientLastName?: string,
    mimeType?: string,
    body?: Array<string>
  ): Promise<ArrayBuffer | any>
  generateMedicationSchemeExport(
    patientId: string,
    language?: string,
    version?: string,
    version2?: number,
    body?: models.MedicationSchemeExportInfoDto
  ): Promise<ArrayBuffer | any>
  generateNoteExport(
    patientId: string,
    id: string,
    date?: number,
    language?: string,
    recipientNihii?: string,
    recipientFirstName?: string,
    recipientLastName?: string,
    mimeType?: string,
    body?: Array<string>
  ): Promise<ArrayBuffer | any>
  generatePrescriptionExport(
    patientId: string,
    id: string,
    date?: number,
    language?: string,
    recipientNihii?: string,
    recipientFirstName?: string,
    recipientLastName?: string,
    mimeType?: string,
    body?: Array<string>
  ): Promise<ArrayBuffer | any>
  generateReportExport(
    patientId: string,
    id: string,
    date?: number,
    language?: string,
    recipientNihii?: string,
    recipientFirstName?: string,
    recipientLastName?: string,
    mimeType?: string,
    body?: Array<string>
  ): Promise<ArrayBuffer | any>
  generateRequestExport(
    patientId: string,
    id: string,
    date?: number,
    language?: string,
    recipientNihii?: string,
    recipientFirstName?: string,
    recipientLastName?: string,
    mimeType?: string,
    body?: Array<string>
  ): Promise<ArrayBuffer | any>
  generateResultExport(
    patientId: string,
    id: string,
    date?: number,
    language?: string,
    recipientNihii?: string,
    recipientFirstName?: string,
    recipientLastName?: string,
    mimeType?: string,
    body?: Array<string>
  ): Promise<ArrayBuffer | any>
  generateSmfExport(
    patientId: string,
    language?: string,
    body?: models.SoftwareMedicalFileExportDto
  ): Promise<ArrayBuffer | any>
  generateSumehr(
    patientId: string,
    language?: string,
    body?: models.SumehrExportInfoDto
  ): Promise<ArrayBuffer | any>
  generateSumehrV2(
    patientId: string,
    language?: string,
    body?: models.SumehrExportInfoDto
  ): Promise<ArrayBuffer | any>
  getSumehrContent(
    patientId: string,
    body?: models.SumehrExportInfoDto
  ): Promise<models.SumehrContentDto | any>
  getSumehrMd5(
    patientId: string,
    body?: models.SumehrExportInfoDto
  ): Promise<models.ContentDto | any>
  getSumehrV2Content(
    patientId: string,
    body?: models.SumehrExportInfoDto
  ): Promise<models.SumehrContentDto | any>
  getSumehrV2Md5(
    patientId: string,
    body?: models.SumehrExportInfoDto
  ): Promise<models.ContentDto | any>
  importMedicationScheme(
    documentId: string,
    documentKey?: string,
    dryRun?: boolean,
    patientId?: string,
    language?: string,
    body?: any
  ): Promise<Array<models.ImportResultDto> | any>
  importSmf(
    documentId: string,
    documentKey?: string,
    dryRun?: boolean,
    patientId?: string,
    language?: string,
    body?: any
  ): Promise<Array<models.ImportResultDto> | any>
  importSumehr(
    documentId: string,
    documentKey?: string,
    dryRun?: boolean,
    patientId?: string,
    language?: string,
    body?: any
  ): Promise<Array<models.ImportResultDto> | any>
  importSumehrByItemId(
    documentId: string,
    documentKey?: string,
    dryRun?: boolean,
    itemId?: string,
    patientId?: string,
    language?: string,
    body?: any
  ): Promise<Array<models.ImportResultDto> | any>
  isSumehrV2Valid(
    patientId: string,
    body?: models.SumehrExportInfoDto
  ): Promise<models.SumehrValidityDto | any>
  isSumehrValid(
    patientId: string,
    body?: models.SumehrExportInfoDto
  ): Promise<models.SumehrValidityDto | any>
  validateSumehr(
    patientId: string,
    language?: string,
    body?: models.SumehrExportInfoDto
  ): Promise<ArrayBuffer | any>
  validateSumehrV2(
    patientId: string,
    language?: string,
    body?: models.SumehrExportInfoDto
  ): Promise<ArrayBuffer | any>
}
