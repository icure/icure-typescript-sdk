/**
 * iCure Data Stack API Documentation
 * The iCure Data Stack Application API is the native interface to iCure. This version is obsolete, please use v2.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Non preferred name information of a person
 */
export class PersonName { 
    constructor(json: JSON | any) {
        Object.assign(this as PersonName, json)
    }

    /**
     * Family name (often called 'Surname')
     */
    lastName?: string;
    /**
     * Given names (not always 'first'). Includes middle names. This repeating element order: Given Names appear in the correct order for presenting the name
     */
    firstNames?: Array<string>;
    /**
     * Starting date of time period when name is/was valid for use. Date encoded as a fuzzy date on 8 positions (YYYYMMDD)
     */
    start?: number;
    /**
     * Ending date of time period when name is/was valid for use. Date encoded as a fuzzy date on 8 positions (YYYYMMDD)
     */
    end?: number;
    /**
     * Parts that come before the name. This repeating element order: Prefixes appear in the correct order for presenting the name
     */
    prefix?: Array<string>;
    /**
     * Parts that come after the name. This repeating element order: Suffixes appear in the correct order for presenting the name
     */
    suffix?: Array<string>;
    /**
     * Text representation of the full name
     */
    text?: string;
    /**
     * What is the use of this name
     */
    use?: PersonName.UseEnum;
}
export namespace PersonName {
    export type UseEnum = 'usual' | 'official' | 'temp' | 'nickname' | 'anonymous' | 'maiden' | 'old' | 'other';
    export const UseEnum = {
        Usual: 'usual' as UseEnum,
        Official: 'official' as UseEnum,
        Temp: 'temp' as UseEnum,
        Nickname: 'nickname' as UseEnum,
        Anonymous: 'anonymous' as UseEnum,
        Maiden: 'maiden' as UseEnum,
        Old: 'old' as UseEnum,
        Other: 'other' as UseEnum
    };
}

