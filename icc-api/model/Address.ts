/**
 * iCure Data Stack API Documentation
 * The iCure Data Stack Application API is the native interface to iCure. This version is obsolete, please use v2.
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Telecom } from './Telecom'

/**
 * This entity represents an Address
 */
export class Address {
  constructor(json: JSON | any) {
    Object.assign(this as Address, json)
  }

  /**
   * The type of place the address represents, ex: home, office, hospital, clinic, etc.
   */
  addressType?: Address.AddressTypeEnum
  /**
   * Descriptive notes about the address
   */
  descr?: string
  /**
   * Street name
   */
  street?: string
  /**
   * Building / house number
   */
  houseNumber?: string
  /**
   * Post / PO box number
   */
  postboxNumber?: string
  /**
   * Postal/PIN/ZIP/Area code
   */
  postalCode?: string
  /**
   * Name of city in the address
   */
  city?: string
  /**
   * Name of state in the Address
   */
  state?: string
  /**
   * Name / code of country in the address
   */
  country?: string
  /**
   * Additional notes
   */
  note?: string
  /**
   * List of other contact details available through telecom services, ex: email, phone number, fax, etc.
   */
  telecoms?: Array<Telecom>
  /**
   * The base64 encoded data of this object, formatted as JSON and encrypted in AES using the random master key from encryptionKeys.
   */
  encryptedSelf?: string
}
export namespace Address {
  export type AddressTypeEnum =
    | 'home'
    | 'work'
    | 'vacation'
    | 'hospital'
    | 'clinic'
    | 'hq'
    | 'other'
    | 'temporary'
    | 'postal'
    | 'diplomatic'
    | 'reference'
    | 'careaddress'
  export const AddressTypeEnum = {
    Home: 'home' as AddressTypeEnum,
    Work: 'work' as AddressTypeEnum,
    Vacation: 'vacation' as AddressTypeEnum,
    Hospital: 'hospital' as AddressTypeEnum,
    Clinic: 'clinic' as AddressTypeEnum,
    Hq: 'hq' as AddressTypeEnum,
    Other: 'other' as AddressTypeEnum,
    Temporary: 'temporary' as AddressTypeEnum,
    Postal: 'postal' as AddressTypeEnum,
    Diplomatic: 'diplomatic' as AddressTypeEnum,
    Reference: 'reference' as AddressTypeEnum,
    Careaddress: 'careaddress' as AddressTypeEnum,
  }
}
